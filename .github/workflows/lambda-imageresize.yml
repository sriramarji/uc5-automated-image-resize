name: lambda-workflow

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform Action'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

permissions:
  id-token: write
  contents: read

jobs:
   lint-and-security:
     name: Lint and Security Checks
     runs-on: ubuntu-latest

     steps:
       - name: Checkout code
         uses: actions/checkout@v4
       
       - name: Install TFLint
         run: |
           wget https://github.com/terraform-linters/tflint/releases/download/v0.50.2/tflint_linux_amd64.zip
           unzip tflint_linux_amd64.zip
           sudo mv tflint /usr/local/bin/
           tflint --version

       - name: Install terraform-docs
         run: |
           curl -sSLo terraform-docs.tar.gz https://terraform-docs.io/dl/v0.20.0/terraform-docs-v0.20.0-linux-amd64.tar.gz
           tar -xzf terraform-docs.tar.gz
           chmod +x terraform-docs
           sudo mv terraform-docs /usr/local/bin/
       
       - name: Run TFLint
         run: tflint --init && tflint -f compact
         working-directory: ./

       - name: Generate Terraform Docs
         run: terraform-docs markdown table . > README.md
         
      
       - name: Commit Terraform Docs
         run: pip install checkov
        
       - name: Install terraform-docs
         run: |
           git config --global user.name "github-actions"
           git config --global user.email "github-actions@github.com"
           git add README.md
           git commit -m "Update Terraform docs [skip ci]" || echo "No changes to commit"
           git push
      
       - name: Install Checkov
         run: pip install checkov

       - name: Run Checkov with soft fail
         run: checkov --directory . --soft-fail

   terraform:
    name: Terraform ${{ github.event.inputs.action }}
    runs-on: ubuntu-latest
    
    env:
      AWS_REGION: ${{ secrets.AWS_REGION || 'us-east-1' }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        # with:
        #   terraform_version: 1.6.6

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::211125784755:role/uc1-alb-oidc
          aws-region: ${{ env.AWS_REGION }}

      - name: Format Terraform code
        run: terraform fmt -recursive

      - name: Initialize Terraform
        run: terraform init

      - name: Validate Terraform
        run: terraform validate

      - name: Terraform Plan
        if: github.event.inputs.action == 'apply'
        run: terraform plan

      - name: Show Terraform Plan Summary
        if: github.event.inputs.action == 'apply'
        run: terraform show

      - name: Terraform Apply (from saved plan)
        if: github.event.inputs.action == 'apply'
        run: terraform apply -auto-approve

      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        run: terraform destroy -auto-approve -lock=false
